<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>true</action_delete>
        <action_insert>false</action_insert>
        <action_label/>
        <action_name/>
        <action_query>false</action_query>
        <action_run_at>server</action_run_at>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <application/>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_exeg2_acs_deployment</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Cascade Delete</name>
        <onclick/>
        <order>100</order>
        <priority>100</priority>
        <read_access_action>false</read_access_action>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/)
{
    function delete_changes()
    {
        // Find all change request that have this acs ref
        var changes_deleted = 0;
        var cr = new GlideRecord("change_request");

        cr.addQuery("u_acs_ref", current.sys_id);
        cr.query();

        while (cr.next())
        {
            cr.deleteRecord();
            changes_deleted++;
        }

        return changes_deleted;
    }


    function delete_deployment_items()
    {
        // Find all the children of this parent deployment and delete them
        var deployment_items_deleted = 0;
        var di = new GlideRecord("x_exeg2_acs_deployment_items");

        di.addQuery("deployment", current.sys_id);
        di.query();

        while (di.next())
        {
            di.deleteRecord();
            deployment_items_deleted++;
        }

        return deployment_items_deleted;
    }

   
    /**
     MAIN
    */
    try
    {
        var deployment_items_deleted = delete_deployment_items();
        var changes_deleted = delete_changes();

        gs.addInfoMessage("Deleted "+deployment_items_deleted+" Deployment Items and "+changes_deleted+" Change Requests");
    }
    catch (err)
    {
        gs.addInfoMessage("Error: "+err);
        current.setAbortAction(true);
    }
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>gpopp</sys_created_by>
        <sys_created_on>2016-08-17 16:29:57</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_id>816d9ea54fd1ea008ea450ee0310c7df</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>Cascade Delete</sys_name>
        <sys_overrides/>
        <sys_package display_value="ACS" source="x_exeg2_acs">58d89c1c13fca200e93cb16f3244b0d7</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="ACS">58d89c1c13fca200e93cb16f3244b0d7</sys_scope>
        <sys_update_name>sys_script_816d9ea54fd1ea008ea450ee0310c7df</sys_update_name>
        <sys_updated_by>mcarter</sys_updated_by>
        <sys_updated_on>2016-09-28 20:28:17</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
</record_update>
